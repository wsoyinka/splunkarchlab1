---
# tasks file for searchhead


- name: generate key on searchhead box
  command: "ssh-keygen -t rsa -f '{{ splunklab_user_key_home_path}}' -N '' -C 'search_head_key' "
  args:
   creates: "{{ splunklab_user_key_home_path }}"
  tags:
   - ckey

- name: Set authorized key from file
  become: True
  authorized_key:
   user: '{{ splunklab_user }}'
   state: present
   key: "{{ lookup('file', '{{ splunklab_user_pub_home_path }}') }}"
  tags:
   - setauthkey
   
- name: set sh1 system hostname
  become: yes
  hostname:
    name: sh1
  tags:
    - set_sh1_hostname

- name: check if splunk is installed
  tags: add_indexers_to_sh
  stat: 
    path: "{{ splunk_path }}/etc/system/local/distsearch.conf"
  register: splunk_path_check

- name: splunk is installed
  tags: add_indexers_to_sh
  debug: 
    msg: "splunk is already installed under {{ splunk_path }}"
  when: splunk_path_check.stat.exists


- name: copy ssh key to forwarders 
  command: "ssh-copy-id   -o StrictHostKeyChecking=no -i {{ splunklab_user_pub_home_path }}  {{ splunklab_user }}@{{ item }} "
 # command: 'touch  /home/{{ splunklab_user }}/foobaz '
  with_items:
     - "{{ forwarder_ip1 }}"
     - "{{ forwarder_ip2 }}"
  tags:
   - sshid_fwds
 
- name: copy ssh key to indexers
  command: "ssh-copy-id  -o StrictHostKeyChecking=no  -i {{ splunklab_user_pub_home_path }}  {{ splunklab_user }}@{{ item }} "
  with_items:
   - "{{ indexer_ip1 }}"
   - "{{ indexer_ip2 }}"
  tags:
   - sshid_idxs

- name: set route
  become: yes
  #become_user: "{{ splunk_system_user }}"
  command: "{{ item }}"
  with_items:
   - "{{ 'route del  default gw 10.20.0.1' }} "
   - "{{ 'route add default gw 10.20.0.71' }}"
  ignore_errors: yes
  tags:
   - set_route
   

   
- name: add splunk user
  become: yes
  user:
   name: "{{ splunk_system_user }}"
   comment: "Splunk service user"
   createhome: yes
#   system: yes
  tags:
   - createuser

- name: download installer for splunk
  command: "wget -O {{ main_installer_dest  }} {{ main_installer_url }} "
  args:
   creates: "{{ main_installer_dest  }}"
  tags:
   - downloadmainwget



# - name: download installer for splunk
#   get_url:
#    url: '{{ main_installer_url }}'
#    dest: '{{ main_installer_dest  }}'
#    validate_certs: no
#   tags:
#    - downloadmain



- name: install Main splunk binary
  become: yes
  tags:
   - installmain
  unarchive:
    src: "{{ main_installer_dest  }}"
    dest: /opt/
    copy: no
    owner: "{{ splunk_system_user }}"
    group: "{{ splunk_system_user }}"
    creates: "{{ splunk_path }}/bin/splunk"


- name: accept splunk license on searchhead
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ splunk_path  }}/bin/splunk start --accept-license --answer-yes"
  environment:
   SPLUNK_HOME: "{{ splunk_path  }}"
  tags: start_splunk

- name: setup splunk to start at boot on searchhead
  become: yes
  command: "{{ splunk_path  }}/bin/splunk enable boot-start -user splunk --accept-license --answer-yes"
  args:
   creates: "{{ splunk_path }}/etc/users/splunk-system-user"
  environment:
   SPLUNK_HOME: "{{ splunk_path  }}"
  tags: start_splunk

- name:  change splunk admin password on searchhead
  become: yes
  become_user: "{{ splunk_system_user }}"
  #become_user: root
  command: "{{ splunk_path  }}/bin/splunk edit user admin -auth {{ splunk_admin }}:changeme -password {{ splunk_pass  }}"
  environment:
   SPLUNK_HOME: "{{ splunk_path  }}"
  tags: set_password_sh
  ignore_errors: yes
  
- name: set default hostname and set servername sh1
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ item }}"
  with_items:
  - "{{ splunk_path  }}/bin/splunk set servername  {{ sh1_name }} -auth {{ splunk_admin }}:{{ splunk_pass }}"
  - "{{ splunk_path  }}/bin/splunk set default-hostname {{ sh1_name }} -auth {{ splunk_admin }}:{{ splunk_pass }} "
  tags:
   - setsplunk-hostname_sh1
  notify: restart splunk


# https://docs.splunk.com/Documentation/Splunk/6.5.2/DistSearch/Configuredistributedsearch  
- name: add search peers or indexers to searchhead to create $SPLUNK_HOME/etc/system/local/distsearch.conf
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ splunk_path  }}/bin/splunk add search-server https://{{ item }}:8089 -auth admin:{{ splunk_pass }} -remoteUsername admin -remotePassword {{ splunk_pass }}"
  with_items:
   - "{{ indexer_ip1 }}"
   - "{{ indexer_ip2 }}"
  environment:
   SPLUNK_HOME: "{{ splunk_path  }}"
  tags: add_indexers_to_sh
  notify: restart splunk
  when: splunk_path_check.stat.exists == false
  
- name: list search peers or indexers configured on searchhead in $SPLUNK_HOME/etc/system/local/distsearch.conf
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ splunk_path  }}/bin/splunk list search-server  -auth admin:{{ splunk_pass }}"
  tags: add_indexers_to_sh
  
  
- name: create app to create index
  become: yes
  become_user: "{{ splunk_system_user }}"
  file:
    path: "{{ splunk_path }}/etc/deployment-apps/createindex/local"
    state: directory
    owner: "{{ splunk_system_user }}"
    group: "{{ splunk_system_user }}"
    mode: 0755
  tags:
   - create_idx_app

- name: create index creation template for new indexes on indexers
  become: yes
  become_user: "{{ splunk_system_user }}"
  template: 
   src: indexes.conf.j2 
   dest: "{{ splunk_path }}/etc/deployment-apps/createindex/local/indexes.conf" 
   owner: "{{ splunk_system_user }}" 
   group: "{{ splunk_system_user }}" 
   mode: 0755
  tags:
   - create_idx_app
#  notify: restart splunk
  
- name: reload deployment server
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ splunk_path  }}/bin/splunk reload deploy-server  -auth admin:{{ splunk_pass }}"
  tags: create_idx_app
  
  
  
- name: create app to create inputs.conf for fwd1
  become: yes
  become_user: "{{ splunk_system_user }}"
  file:
    path: "{{ splunk_path }}/etc/deployment-apps/fwd1_app/local"
    state: directory
    owner: "{{ splunk_system_user }}"
    group: "{{ splunk_system_user }}"
    mode: 0755
  tags:
   - create_inputs_fwd1_app

- name: create index creation template for inputs.conf for fwd1
  become: yes
  become_user: "{{ splunk_system_user }}"
  template: 
   src: inputs.conf.fwd1.j2
   dest: "{{ splunk_path }}/etc/deployment-apps/fwd1_app/local/inputs.conf" 
   owner: "{{ splunk_system_user }}" 
   group: "{{ splunk_system_user }}" 
   mode: 0755
  tags:
   - create_inputs_fwd1_app
  
- name: reload deployment server
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ splunk_path  }}/bin/splunk reload deploy-server  -auth admin:{{ splunk_pass }}"
  tags: create_inputs_fwd1_app
  
  
- name: create app to create inputs.conf for fwd2
  become: yes
  become_user: "{{ splunk_system_user }}"
  file:
    path: "{{ splunk_path }}/etc/deployment-apps/fwd2_app/local"
    state: directory
    owner: "{{ splunk_system_user }}"
    group: "{{ splunk_system_user }}"
    mode: 0755
  tags:
   - create_inputs_fwd2_app

- name: create index creation template for inputs.conf for fwd1
  become: yes
  become_user: "{{ splunk_system_user }}"
  template: 
   src: inputs.conf.fwd2.j2 
   dest: "{{ splunk_path }}/etc/deployment-apps/fwd2_app/local/inputs.conf" 
   owner: "{{ splunk_system_user }}" 
   group: "{{ splunk_system_user }}" 
   mode: 0755
  tags:
   - create_inputs_fwd2_app
  
- name: reload deployment server
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ splunk_path  }}/bin/splunk reload deploy-server  -auth admin:{{ splunk_pass }}"
  tags: create_inputs_fwd2_app


- name:   stat file
  shell: "ls -d {{ splunk_path }}/diag*"
  register: diag_file_name_old
  tags:
   - run_diag

- name:  create diag on searchhead
  become: yes
  become_user: "{{ splunk_system_user }}"
  command: "{{ item }}"
  with_items:
   - "rm  -rf  {{ diag_file_name_old.stdout }}"
   - "{{ splunk_path }}/bin/splunk diag "
  tags:
   - run_diag

#- name:  mv diag on searchhead
#  become: yes
#  command: creates="/home/{{ splunklab_user }}/SOYINKA-SearchHead.tar.gz" "mv {{ splunk_path }}/diag-sh*.tar.gz   /home/{{ splunklab_user }}/SOYINKA-SearchHead.tar.gz"
#  tags:
#   - run_diag2 

- name:   stat file
  shell: "ls -d {{ splunk_path }}/diag*"
  register: diag_file_name
  tags:
   - run_diag2
   
- name: change file mode
  become: yes
  become_user: "{{ splunk_system_user }}"
  file:
    path: "{{ diag_file_name.stdout }}"
    mode: 0755
  tags:
   - run_diag2
 
- name:  mv diag on searchhead
  become: yes
  become_user: "{{ splunklab_user }}"
  command:  "cp {{ diag_file_name.stdout }}   /home/{{ splunklab_user }}/SOYINKA-SearchHead.tar.gz"
  tags:
   - run_diag2
 #
#- name:  mv diag on searchhead
 # become: yes
  #become_user: "{{ splunk_system_user }}"
  #copy:
   # src: "{{ diag_file_name.stdout }}"
   # dest: "/home/{{ splunklab_user }}/SOYINKA-SearchHead.tar.gz"
   # owner: "{{ splunklab_user }}"
   # group: "{{ splunklab_user }}"
   # mode: 0755
  #tags:
  # - run_diag2


